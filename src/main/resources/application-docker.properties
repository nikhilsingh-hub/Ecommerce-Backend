# Docker Profile Configuration
# Note: spring.profiles.active is set via environment variable in docker-compose

# Docker settings
app.debug=false

# Database settings for Docker environment
spring.datasource.url=jdbc:mysql://mysql:3306/ecommerce?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=ecommerce_user
spring.datasource.password=ecommerce_pass

# Elasticsearch settings for Docker
spring.elasticsearch.rest.uris=http://elasticsearch:9200

# JPA settings for Docker
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized

# Logging for Docker environment
logging.level.com.Ecom.backend=INFO
logging.level.org.springframework.data.elasticsearch=WARN
logging.level.org.hibernate.SQL=WARN

# Wait for dependencies to be ready
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.initialization-fail-timeout=60000

# Docker-optimized processing intervals
outbox.processing-interval-ms=3000
elasticsearch.sync.incremental-interval-ms=180000

# Docker batch sizes
pubsub.consumer.batch-size=15
outbox.batch-size=75
elasticsearch.sync.batch-size=150
